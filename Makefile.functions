# AWS assume role settings
# Attempts to assume IAM role using STS
# Syntax: $(call assume_role,<role-arn>)
get_caller_id = aws sts get-caller-identity --output text --query '[Account,UserId,Arn]'
get_assume_session = aws sts assume-role --role-arn=arn:aws:iam::$(1):role/$(2) --role-session-name=$(3) --output text --query "Credentials.{AKI:AccessKeyId, SAK:SecretAccessKey, ST:SessionToken}"
get_ecr_login = aws ecr get-login --no-include-email --region us-east-1 | awk -F'/' '{ print $$NF }'
get_cloudformation_bucket_domain = aws cloudformation list-exports --query 'Exports[?Name==`BucketDomainBootstrap`].Value' --output text
get_cloudformation_bucket_name = aws cloudformation list-exports --query 'Exports[?Name==`BucketNameBootstrap`].Value' --output text
get_lambda_bucket_name = aws cloudformation list-exports --query 'Exports[?Name==`BucketNameLambda`].Value' --output text
define assume_role
  $(eval AWS_CALLER_ID = $(shell $(call get_caller_id)))
  $(eval export AWS_ACCOUNT_ID = $(shell echo $(AWS_CALLER_ID) | awk '{ print $$1 }'))
  $(eval AWS_USER_ID = $(shell echo $(AWS_CALLER_ID)| awk -F'/' '{ print $$NF }'))
  $(eval AWS_SESSION = $(shell $(call get_assume_session,$(AWS_ACCOUNT_ID),$(1),$(AWS_USER_ID))))
  $(eval export AWS_ACCESS_KEY_ID = $(shell echo $(AWS_SESSION) | awk '{ print $$1 }'))
  $(eval export AWS_SECRET_ACCESS_KEY = $(shell echo $(AWS_SESSION) | awk '{ print $$2 }'))
  $(eval export AWS_SESSION_TOKEN = $(shell echo $(AWS_SESSION) | awk '{ print $$3 }'))
  $(eval export AWS_DOCKER_REGISTRY = $(shell $(call get_ecr_login)))
	$(eval export AWS_CLOUDFORMATION_BUCKET_DOMAIN = $(shell $(call get_cloudformation_bucket_domain)))
	$(eval export AWS_CLOUDFORMATION_BUCKET_NAME = $(shell $(call get_cloudformation_bucket_name)))
	$(eval export AWS_LAMBDA_BUCKET_NAME = $(shell $(call get_lambda_bucket_name)))
	$(eval export BUCKET = $(AWS_CLOUDFORMATION_BUCKET_NAME))
endef
